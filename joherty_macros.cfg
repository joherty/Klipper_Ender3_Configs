###################################################################################################
######################################  JOHERTY Macros  ################################################

[gcode_macro START_PRINT]
gcode:
    gcode:
      G92 E0 ; Reset Extruder

      {% set BED_TEMP = params.BED_TEMP|default(60)|float %}

      {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

      G90 ; use absolute coordinates
      M83 ; extruder relative mode
      M140 S[BED_TEMP] ; set final bed temp
      M104 S150 ; set temporary nozzle temp to prevent oozing during homing
      G4 S10 ; allow partial nozzle warmup
      G28 ; home all axis
      G1 Z50 F240
      G1 X2 Y10 F3000
      M104 S[nozzle_temperature_initial_layer] ; set final nozzle temp
      M190 S[bed_temperature_initial_layer_single] ; wait for bed temp to stabilize
      M109 S[nozzle_temperature_initial_layer] ; wait for nozzle temp to stabilize
      BED_MESH_CALIBRATE
      G92 E0



[gcode_macro END_PRINT]
gcode:
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0
  # Move nozzle away from print while retracting
  G91
  G1 X-2 Y-2 E-3 F300
  # Raise nozzle by 50mm
  G1 Z50 F3000
  G90
  # Disable steppers
  M84



[gcode_macro M600]
description: Starts process of Filament Change
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    PAUSE_MACRO
    UNLOAD_FILAMENT
  {% endif %}


 
[gcode_macro PAUSE_MACRO]
description: Pauses Print
gcode:
    PAUSE
    SET_IDLE_TIMEOUT TIMEOUT={ 30 * 60 }

[gcode_macro FC_RESUME]
description: Resume print after Filament Change
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    SET_IDLE_TIMEOUT TIMEOUT={ 10 * 60 }
    G1 E-{ E }
    # Reset extruder position
    G92 E0
    RESUME



[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                   # relative coords
    G1 E45.0 F{ 5 * 60 }  # purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}


[gcode_macro LOAD_FILAMENT]
description: Loads filament into the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_state
    G91                   # Relative coords
    G1 E50 F{ 10 * 60 } # perform the load 50mm
    G1 E50 F{ 10 * 60 } # perform the load 50mm
    G1 E50 F{ 10 * 60 } # perform the load 50mm
    G1 E50 F{ 10 * 60 } # perform the load 50mm    
    G1 E50 F{ 10 * 60 } # perform the load 50mm    
    G1 E50 F{ 5 * 60 }  # extrude 50mm slowly
    G4 P{ 0.9 * 1000 }    # dwell (ms)
    G1 E25.0 F{ 5 * 60 }  # extrude a little more
    _ENABLE_FS
    RESTORE_GCODE_STATE NAME=LOAD_state
  {% endif %}



[gcode_macro UNLOAD_FILAMENT]
description: Unloads Filament from extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_state
    {% set z_lift = params.z_lift|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ z_lift, z_diff ] | min%}
 
    G91                   # relative positioning
    G0 Z{ z_safe_lift }
    # Reset extruder position
    G92 E0
    G1 E5.0 F300        # extrude a little
    G1 E-50 F{ 10 * 60 } # perform the unload 50mm
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 5 * 60 }   # finish the unload slower
    RESTORE_GCODE_STATE NAME=UNLOAD_state
  {% endif %}    


  
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro SHOW_PRINT]
description: Moves the extruder out of the way and bed forward
gcode:
    HOME_CHECK
    {% set z_lift = params.z_lift|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ z_lift, z_diff ] | min%}
    G1 Z{ z_safe_lift }
    G1 X10 Y220 F4000  



[gcode_macro HOME_CHECK]
description: Checks if the printer is homed, it not it homes the printer
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL


  
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}



[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE



[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set y_park = printer.toolhead.axis_minimum.y|float + 10.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}



[gcode_macro NEW_MESH]
description: Create a new default bed mesh
gcode:

  {% if printer.extruder.temperature[0] < 150 %}
    M104 S150 ; Set extruder temperature to 150 degrees Celsius
    {action_respond_info("Extruder temperature set to 150")}
  {% endif %}

  {% if printer.bed.temperature[0] < 50 %}
    M140 S50 ; Set bed temperature to 50 degrees Celsius
    {action_respond_info("Bed temperature is less than 50. Setting extruder temperature to 50.")}
  {% endif %}

  HOME_CHECK

  BED_MESH_CALIBRATE ; Auto bed leveling

  SAVE_CONFIG



[gcode_macro LOAD_MESH]
description: Load default bed mesh
gcode:
  BED_MESH_PROFILE LOAD=default
