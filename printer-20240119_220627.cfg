#[include timelapse.cfg]

[include config_backup.cfg]

[idle_timeout]
#gcode:
  #_KM_IDLE_TIMEOUT # This line must be in your idle_timeout section.

[pause_resume]
recover_velocity: 40
# When capture/restore is enabled, the speed at which to return to the captured position (in mm/s). Default is 50 mm/s

[respond]

[save_variables]
filename: ~/printer_data/variables.cfg # UPDATE THIS FOR YOUR PATH!!!

[virtual_sdcard]
path: /home/pi/printer_data/gcodes # UPDATE THIS FOR YOUR PATH!!!

[display_status]


[screws_tilt_adjust]
screw1: 70.5,37.5
screw1_name: front left screw
screw2: 240,37.5
screw2_name: front right screw
screw3: 240,207.5
screw3_name: rear right screw
screw4: 70.5,207.5
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

[bltouch]
sensor_pin: ^PC2
control_pin: PA1
x_offset: -44
y_offset: -9
pin_move_time: 0.4
speed: 5.0
stow_on_each_sample: False
sample_retract_dist: 8.0
samples: 2

[homing_override]
gcode:
    G90 ; Use absolute position mode
    G1 Z10 F600; Move up 10mm
    G28 X Y
    G1 X166 Y120 F6000 ; Change the X and Y coordinates to the center of your print bed
    G28 Z
set_position_z: 0.0

[bed_mesh]
speed: 80
horizontal_move_z: 5
mesh_min: 5, 15 
mesh_max: 200, 200
probe_count: 5, 5
fade_start: 1.0
mesh_pps: 2,2

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 250
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PB15
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC6
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -3
position_max: 250

[tmc2209 stepper_z]
uart_pin: PC10
run_current: 0.580
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250
pressure_advance: 0.89

[tmc2209 extruder]
uart_pin: PC11
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA8

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_31FFD7054242363124902457-if00

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[bed_screws]
screw1: 30, 36
screw2: 30, 206
screw3: 200, 36
screw4: 200, 206

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[static_digital_output usb_pullup_enable]
pins: !PC13

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5, EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PB6, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB7, EXP1_10=<5V>


[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    115,115,20 # an example

[input_shaper]
shaper_freq_x: 63.4
shaper_type_x: mzv
shaper_freq_y: 30.0
shaper_type_y: 2hump_ei




###################################################################################################
######################################  MY Macros  ################################################




[gcode_macro START_PRINT]
gcode:
    gcode:
      G92 E0 ; Reset Extruder

      {% set BED_TEMP = params.BED_TEMP|default(60)|float %}

      {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

      M140 S{BED_TEMP} ;Start heating bed

      G28 ; Home all axes

      M190 S{BED_TEMP} ;Wait for bed to reach temp before proceeding

      M104 S{EXTRUDER_TEMP} ;Start heating extruder

      BED_MESH_CALIBRATE ; Auto bed leveling

      G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed

      G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position

      M109 S{EXTRUDER_TEMP} ;Wait for extruder to reach temp before proceeding

      G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line

      G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little

      G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line

      G92 E0 ; Reset Extruder

      G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed

      G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish




      
[gcode_macro END_PRINT]
gcode:
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0
  # Move nozzle away from print while retracting
  G91
  G1 X-2 Y-2 E-3 F300
  # Raise nozzle by 50mm
  G1 Z50 F3000
  G90
  # Disable steppers
  M84





[gcode_macro M600]
description: Starts process of Filament Change
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    PAUSE_MACRO
    UNLOAD_FILAMENT
  {% endif %}




 
[gcode_macro PAUSE_MACRO]
description: Pauses Print
gcode:
    PAUSE
    SET_IDLE_TIMEOUT TIMEOUT={ 30 * 60 }

[gcode_macro FC_RESUME]
description: Resume print after Filament Change
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    SET_IDLE_TIMEOUT TIMEOUT={ 10 * 60 }
    G1 E-{ E }
    # Reset extruder position
    G92 E0
    RESUME





[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                   # relative coords
    G1 E45.0 F{ 5 * 60 }  # purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}





[gcode_macro LOAD_FILAMENT]
description: Loads filament into the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_state
    G91                   # Relative coords
    G1 E50 F{ 10 * 60 } # perform the load 50mm
    G1 E50 F{ 10 * 60 } # perform the load 50mm
    G1 E50 F{ 10 * 60 } # perform the load 50mm
    G1 E50 F{ 10 * 60 } # perform the load 50mm    
    G1 E50 F{ 10 * 60 } # perform the load 50mm    
    G1 E50 F{ 5 * 60 }  # extrude 50mm slowly
    G4 P{ 0.9 * 1000 }    # dwell (ms)
    G1 E25.0 F{ 5 * 60 }  # extrude a little more
    _ENABLE_FS
    RESTORE_GCODE_STATE NAME=LOAD_state
  {% endif %}





[gcode_macro UNLOAD_FILAMENT]
description: Unloads Filament from extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_state
    {% set z_lift = params.z_lift|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ z_lift, z_diff ] | min%}
 
    G91                   # relative positioning
    G0 Z{ z_safe_lift }
    # Reset extruder position
    G92 E0
    G1 E5.0 F300        # extrude a little
    G1 E-50 F{ 10 * 60 } # perform the unload 50mm
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 5 * 60 }   # finish the unload slower
    RESTORE_GCODE_STATE NAME=UNLOAD_state
  {% endif %}    




  
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro SHOW_PRINT]
description: Moves the extruder out of the way and bed forward
gcode:
    HOME_CHECK
    {% set z_lift = params.z_lift|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ z_lift, z_diff ] | min%}
    G1 Z{ z_safe_lift }
    G1 X10 Y220 F4000  





[gcode_macro HOME_CHECK]
description: Checks if the printer is homed, it not it homes the printer
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}





[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL
  
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}





[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE





[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set y_park = printer.toolhead.axis_minimum.y|float + 10.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}




[gcode_macro NEW_MESH]
description: Create a new default bed mesh
gcode:

  {% if printer.extruder.temperature[0] < 150 %}
    M104 S150 ; Set extruder temperature to 150 degrees Celsius
    {action_respond_info("Extruder temperature set to 150")}
  {% endif %}

  {% if printer.bed.temperature[0] < 50 %}
    M140 S50 ; Set bed temperature to 50 degrees Celsius
    {action_respond_info("Bed temperature is less than 50. Setting extruder temperature to 50.")}
  {% endif %}

  HOME_CHECK

  BED_MESH_CALIBRATE ; Auto bed leveling

  SAVE_CONFIG





[gcode_macro LOAD_MESH]
description: Load default bed mesh
gcode:
  BED_MESH_PROFILE LOAD=default






#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.544
#*# pid_ki = 1.716
#*# pid_kd = 110.520
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.698
#*# pid_ki = 1.671
#*# pid_kd = 790.586
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.133750, 0.015000, -0.011250, 0.021250, 0.048750
#*# 	  0.146250, 0.056250, 0.011250, 0.038750, 0.048750
#*# 	  0.112500, 0.016250, -0.005000, 0.038750, 0.047500
#*# 	  0.108750, 0.045000, 0.028750, 0.067500, 0.075000
#*# 	  0.096250, 0.013750, 0.003750, 0.046250, 0.061250
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 200.0
#*# min_y = 15.0
#*# max_y = 200.0
#*#
#*# [bltouch]
#*# z_offset = 2.070
